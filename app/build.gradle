plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'


}

android {
    namespace 'com.example.happyplaces'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.happyplaces"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.libraries.maps:maps:3.1.0-beta'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // TODO (Step 2 : Add a dependency for using material components like in our case we are going to use FloatingActionButton.)
    //START
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    implementation 'com.karumi:dexter:6.2.3'
/*

    debugImplementation 'im.dino:dbinspector:3.4.1@aar'
*/

    // Adding an google material design dependency for using material components
    implementation 'com.google.android.material:material:1.0.0'
    //END

    // Coroutine Lifecycle scope
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'

    // Navigation Component
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'



    // Dagger-hilt
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-android-compiler:2.44'
    annotationProcessor 'com.google.dagger:hilt-compiler:2.44'

    // AndroidX KTX Activity and Fragment
    implementation 'androidx.fragment:fragment-ktx:1.4.0'
    implementation 'androidx.activity:activity-ktx:1.4.0'
    def lottieVersion = "3.4.0"
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // Coroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    def room_version = "2.4.3"
    kapt "androidx.room:room-compiler:$room_version"


    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"

    implementation "com.google.android.material:material:1.3.0-alpha03"

    implementation 'com.google.android.material:material:x.x.x'

    // Room
    kapt 'androidx.room:room-compiler:2.4.3'
    implementation 'androidx.room:room-ktx:2.4.3'



    implementation 'com.android.volley:volley:1.2.0'



}